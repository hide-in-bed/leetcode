/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        //在l1的基础上运算
        ListNode *head=l1;
        int pre=0;//定义进位符号
        while(l1!=NULL&&l2!=NULL)
        {
            int sum=l1->val+l2->val+pre;
            pre=sum>=10?1:0;
            l1->val=sum>=10?sum-10:sum;
            if(l1->next==NULL&&l2->next!=NULL)
            {
                l1->next=new ListNode(0);
            }
            else if(l2->next==NULL&&l1->next!=NULL)
            {
                l2->next=new ListNode(0);
            }
            //考虑都为空且有进位的情况
            if(l1->next==NULL&&l2->next==NULL&&pre==1)
            {
                l1->next=new ListNode(1);
                break;
            }
            l1=l1->next;
            l2=l2->next;
        }
        return head;
    }
};
