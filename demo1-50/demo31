这道题让我们求下一个排列顺序，有题目中给的例子可以看出来，如果给定数组是降序，则说明是全排列的最后一种情况，
则下一个排列就是最初始情况，可以参见之前的博客 Permutations 全排列。我们再来看下面一个例子，有如下的一个数组

1　　2　　7　　4　　3　　1

下一个排列为：

1　　3　　1　　2　　4　　7

那么是如何得到的呢，我们通过观察原数组可以发现，如果从末尾往前看，数字逐渐变大，到了2时才减小的，
然后我们再从后往前找第一个比2大的数字，是3，那么我们交换2和3，再把此时3后面的所有数字转置一下即可，步骤如下：

1　　2　　7　　4　　3　　1

1　　2　　7　　4　　3　　1

1　　3　　7　　4　　2　　1

1　　3　　1　　2　　4　　7

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        int n=nums.size();
        int t=-1;
        for(int i=n-1;i>0;i--)
        {
            if(nums[i]<=nums[i-1])
                continue;
            t=i-1;
            for(int j=n-1;j>t;j--)
            {
                if(nums[j]<=nums[t])
                    continue;
                swap(nums[j],nums[t]);
                break;
            }
            break;
        }
        reverse(nums.begin()+t+1,nums.end());
    }
};
