//递归，和斐波那契相似
//超出时间
class Solution {
public:
    int climbStairs(int n) {
        if(n==1)
            return 1;
        else if(n==2)
            return 2;
        else
            return climbStairs(n-1)+climbStairs(n-2);
    }
};


//dp
//dp[i]=dp[i-1]+dp[i-2]第i层楼梯是i-1层楼梯的方法+i-2层楼梯的方法
class Solution {
public:
    int climbStairs(int n) {
        if(n==1)
            return 1;
        vector<int>dp(n+1,0);
        dp[1]=1;
        dp[2]=2;
        for(int i=3;i<=n;i++)
        {
            dp[i]=dp[i-1]+dp[i-2];
        }
        return dp[n];
    }
};
